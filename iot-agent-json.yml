version: "3.8"
services:
    iot-agent-json:
      labels:
        org.eurodyn: 'ramp_iiot'
      image: quay.io/fiware/iotagent-json:${JSON_VERSION}
      hostname: iot-agent-json
      container_name: ramp_iiot-iot-agent-json
      ports:   # for communication outside docker environment BUT only localhost
        - "127.0.0.1:${IOTA_NORTH_PORT}:${IOTA_NORTH_PORT}"
        - "127.0.0.1:${IOTA_SOUTH_PORT}:${IOTA_SOUTH_PORT}" 
      networks:
        - ramp_iiot
      environment:
        - IOTA_CB_HOST=ramp_iiot-orion # name of the context broker to update context
        - IOTA_CB_PORT=${ORION_LD_PORT} # port the context broker listens on to update context
        - IOTA_NORTH_PORT=${IOTA_NORTH_PORT}
        - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
        - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
        - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
        - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
        - IOTA_MONGO_HOST=ramp_iiot-mongo-db # The host name of MongoDB
        - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
        - IOTA_MONGO_DB=iotagentjson # The name of the database used in mongoDB
        - IOTA_HTTP_PORT=${IOTA_SOUTH_PORT} # The port used for device traffic over HTTP
        - IOTA_PROVIDER_URL=http://iot-agent-json:${IOTA_NORTH_PORT}
        - IOTA_DEFAULT_RESOURCE=/iot/json

        - IOTA_CB_NGSI_VERSION=ld # use NGSI-LD when sending updates for active attributes
        - IOTA_JSON_LD_CONTEXT=${CONTEXT}
        - IOTA_FALLBACK_TENANT=openiot
        - "IOTA_MQTT_DISABLED=true"
        - "IOTA_AMPQ_DISABLED=true"
      # healthcheck:
      #   interval: 10s

# networks:
#   ramp_iiot:
#     # external: true
#     name: ramp_iiot