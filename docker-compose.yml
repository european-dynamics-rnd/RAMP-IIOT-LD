version: "3.8"

include:
- keycloak.yml
- temporal.yml

services:
  # @context file is served from here
  ld-context:
    labels:
      org.eurodyn: 'ramp_iiot'
    image: httpd:alpine
    hostname: ramp_iiot-ld-context
    container_name: ramp_iiot-ld-context
    expose:
        - "3004:80"
    networks:
      - ramp_iiot
    volumes:
        - ${PWD}/data-models:/usr/local/apache2/htdocs/
    # healthcheck:
    #   test: (wget --server-response --spider --quiet  http://ld-context/datamodels.context-ngsi.jsonld 2>&1 | awk 'NR==1{print $$2}'|  grep -q -e "200") || exit 1
 
  ramp_iiot-orion:
    labels:
      org.eurodyn: 'ramp_iiot'
    platform: linux/amd64
    image: quay.io/fiware/orion-ld:${ORION_LD_VERSION}
    hostname: ramp_iiot-orion
    container_name: ramp_iiot-orion
    restart: always
    depends_on:
      - ramp_iiot-mongo-db
      - ramp_iiot-timescale-db
    networks:
      - ramp_iiot
    # expose:
    #   - "${ORION_LD_PORT}:${ORION_LD_PORT}"
    ports:   # for communication outside docker environment BUT only localhost
      - "127.0.0.1:${ORION_LD_PORT}:${ORION_LD_PORT}"
    environment:
      - ORIONLD_TROE=TRUE
      - ORIONLD_TROE_USER=${ORIONLD_TROE_USER}
      - ORIONLD_TROE_PWD=${ORIONLD_TROE_PWD}
      - ORIONLD_TROE_HOST=ramp_iiot-timescale-db
      - ORIONLD_MONGO_HOST=ramp_iiot-mongo-db
      - ORIONLD_MULTI_SERVICE=TRUE
      - ORIONLD_DISABLE_FILE_LOG=TRUE
    command: -logLevel DEBUG  -troePoolSize 10 -forwarding 
    healthcheck:
      test: curl --fail -s http://ramp_iiot-orion:${ORION_LD_PORT}/version || exit 1
      interval: 10s

  # Databases
  ramp_iiot-mongo-db:
    labels:
      org.eurodyn: 'ramp_iiot'
    image: mongo:${MONGO_DB_VERSION}
    hostname: ramp_iiot-mongo-db
    container_name: ramp_iiot-mongo-db
    expose:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}"
    networks:
      - ramp_iiot
    volumes:
      - ramp-iiot-mongo-db-data:/data/db
      - ramp-iiot-mongo-config:/data/configdb
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`; 
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1    
      interval: 5s

networks:
  ramp_iiot:
    labels:
      org.eurodyn: 'ramp_iiot'


volumes:
  ramp-iiot-mongo-db-data: 
  ramp-iiot-mongo-config: 